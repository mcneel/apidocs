<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rhino.Display on Hugo based API Site</title>
    <link>/apidocs/hugo/rhinocommon/rhino/display/</link>
    <description>Recent content in Rhino.Display on Hugo based API Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Mar 2020 15:34:14 +0000</lastBuildDate>
    
	<atom:link href="/apidocs/hugo/rhinocommon/rhino/display/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PageViewSpaceChangeEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/pageviewspacechangeeventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:18 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/pageviewspacechangeeventargs/</guid>
      <description>Namespace: Rhino.Display
public class PageViewSpaceChangeEventArgs : EventArgsProperties  Guid NewActiveDetailId The id of the detail object was set active. Note, if this id is equal to Guid.Empty, then the active detail object is the page view itself. Guid OldActiveDetailId The id of the previously active detail object. Note, if this id is equal to Guid.Empty, then the active detail object was the page view itself. RhinoPageView PageView The page view on which a different detail object was set active.</description>
    </item>
    
    <item>
      <title>RhinoView</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/rhinoview/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:18 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/rhinoview/</guid>
      <description>Namespace: Rhino.Display
A RhinoView represents a single &amp;ldquo;window&amp;rdquo; display of a document. A view could contain one or many RhinoViewports (many in the case of Layout views with detail viewports). Standard Rhino modeling views have one viewport.
public class RhinoViewEvents  static Create  static Destroy  static Modified  since 7.0 static Rename  static SetActive   Properties  static bool EnableDrawing Gets or sets the &amp;lsquo;drawing enabled&amp;rsquo; flag.</description>
    </item>
    
    <item>
      <title>RhinoViewport</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/rhinoviewport/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:18 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/rhinoviewport/</guid>
      <description>Namespace: Rhino.Display
Displays geometry with a given projection. In standard modeling views there is a one to one relationship between RhinoView and RhinoViewports. In a page layout, there may be multiple RhinoViewports for a single layout.
public class RhinoViewport : IDisposableConstructors  RhinoViewport()  RhinoViewport(RhinoViewport other)   Properties  Rectangle Bounds Gets the size and location of the viewport, in pixels, relative to the parent view. double Camera35mmLensLength  Vector3d CameraDirection  Point3d CameraLocation  Point3d CameraTarget Viewport target point.</description>
    </item>
    
    <item>
      <title>ViewCapture</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/viewcapture/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:18 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/viewcapture/</guid>
      <description>Namespace: Rhino.Display
public class ViewCaptureConstructors  ViewCapture()  since 6.0  Properties  bool DrawAxes  since 6.0 bool DrawGrid  since 6.0 bool DrawGridAxes  since 6.0 int Height Height of capture in Pixels since 6.0 bool Preview  since 6.0 int RealtimeRenderPasses  since 6.0 bool ScaleScreenItems  since 6.0 bool TransparentBackground  since 6.0 int Width Width of capture in Pixels since 6.0  Methods  static Bitmap CaptureToBitmap(ViewCaptureSettings settings)  since 6.</description>
    </item>
    
    <item>
      <title>ViewCaptureSettings</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/viewcapturesettings/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:18 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/viewcapturesettings/</guid>
      <description>Namespace: Rhino.Display
Used to hold the information required to generate high resolution output of a RhinoViewport. This is used for generating paper prints or image files
public class ViewCaptureSettings : IDisposableConstructors  ViewCaptureSettings()  since 6.0 ViewCaptureSettings(RhinoPageView sourcePageView,double dpi)  since 6.0 ViewCaptureSettings(RhinoView sourceView,Size mediaSize,double dpi)  since 6.0  Properties  double ArrowheadSizeMillimeters arrowhead size in millimeters since 6.15 Rectangle CropRectangle Actual area of output rectangle that view capture is sent to.</description>
    </item>
    
    <item>
      <title>ViewEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/vieweventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:18 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/vieweventargs/</guid>
      <description>Namespace: Rhino.Display
public class ViewEventArgs : EventArgsProperties  RhinoView View   </description>
    </item>
    
    <item>
      <title>CalculateBoundingBoxEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/calculateboundingboxeventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/calculateboundingboxeventargs/</guid>
      <description>Namespace: Rhino.Display
public class CalculateBoundingBoxEventArgs : DrawEventArgsProperties  BoundingBox BoundingBox Gets the current bounding box.  Methods  void IncludeBoundingBox(BoundingBox box) Unites a bounding box with the current display bounding box in order to ensure dynamic objects in &amp;ldquo;box&amp;rdquo; are drawn.  </description>
    </item>
    
    <item>
      <title>ColorCMYK</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorcmyk/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorcmyk/</guid>
      <description>Namespace: Rhino.Display
Represents a CMYK (Cyan, Magenta, Yellow, Key) color with double precision floating point channels. CMYK colors are used primarily in printing environments as they provide a good simulation of physical ink.
Constructors  ColorCMYK(Color rgb) Initializes a new instance of ColorCMYK that is equivalent to an RGB color. ColorCMYK(double cyan,double magenta,double yellow) Initializes a new instance of ColorCMYK with custom channel values. The cyan, magenta and yellow values will be adjusted based on their combined darkness.</description>
    </item>
    
    <item>
      <title>ColorHSL</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorhsl/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorhsl/</guid>
      <description>Namespace: Rhino.Display
Represents an HSL (Hue, Saturation, Luminance) color with double precision floating point channels. HSL colors are used primarily in Graphical User Interface environments as they provide a very natural approach to picking colors.
Constructors  ColorHSL(Color rgb) Constructs a new instance of ColorHSL that is equivalent to an RGB color. ColorHSL(double hue,double saturation,double luminance) Constructs a new instance of ColorHSL with custom channel values. ColorHSL(double alpha,double hue,double saturation,double luminance) Constructs a new instance of ColorHSL with custom channel values.</description>
    </item>
    
    <item>
      <title>ColorHSV</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorhsv/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorhsv/</guid>
      <description>Namespace: Rhino.Display
Represents an HSV (Hue, Saturation, Value) color with double precision floating point channels. HSV colors (also sometimes called HSB, where B means Brightness) are similar to HSL colors in that they represent colors in a cylindrical color space, and are intended to provide intuitive means to edit the brightness of a particular color over RGB color space where each each color channel would need to be modified to affect the color brightness.</description>
    </item>
    
    <item>
      <title>ColorLAB</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorlab/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorlab/</guid>
      <description>Namespace: Rhino.Display
Represents a LAB (Lightness, A, B) color with double precision floating point channels. LAB colors are based on nonlinearly compressed CIE XYZ color space coordinates.
The A and B parameters of a LAB color represent the opponents.
Constructors  ColorLAB(Color rgb) Constructs a new instance of ColorLAB that is equivalent to an RGB color. ColorLAB(double lightness,double a,double b) Constructs a new instance of ColorLAB with custom channel values. ColorLAB(double alpha,double lightness,double a,double b) Constructs a new instance of ColorLAB with custom channel values.</description>
    </item>
    
    <item>
      <title>ColorLCH</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorlch/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorlch/</guid>
      <description>Namespace: Rhino.Display
Represents an LCH (Lightness, A, B) color with double precision floating point channels. LCH colors (also sometimes called CIELUV) are transformation of the 1931 CIE XYZ color space, in order to approach perceptual uniformity. They are primarily used in computer graphics which deal with colored lights.
Constructors  ColorLCH(Color rgb) Constructs a new instance of ColorLCH that is equivalent to an RGB color. ColorLCH(double lightness,double chroma,double hue) Constructs a new instance of ColorLCH with custom channel values.</description>
    </item>
    
    <item>
      <title>ColorXYZ</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorxyz/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorxyz/</guid>
      <description>Namespace: Rhino.Display
Represents an XYZ (Hue, Saturation, Luminance) color with double precision floating point channels. XYZ colors are based on the CIE 1931 XYZ color space standard and they mimic the natural sensitivity of cones in the human retina.
Constructors  ColorXYZ(Color rgb) Constructs a new instance of ColorXYZ that is equivalent to an RGB color. ColorXYZ(double x,double y,double z) Constructs a new instance of ColorXYZ with custom channel values. ColorXYZ(double alpha,double x,double y,double z) Constructs a new instance of ColorXYZ with custom channel values.</description>
    </item>
    
    <item>
      <title>CullObjectEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/cullobjecteventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/cullobjecteventargs/</guid>
      <description>Namespace: Rhino.Display
public class CullObjectEventArgs : DrawEventArgsProperties  bool CullObject  since 5.3 RhinoObject RhinoObject  since 5.3 uint RhinoObjectSerialNumber Gets the rhino object runtime serial number. since 6.14  </description>
    </item>
    
    <item>
      <title>CustomDisplay</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/customdisplay/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/customdisplay/</guid>
      <description>Namespace: Rhino.Display
Provides some basic (indeed, very basic) mechanisms for drawing custom geometry in viewports.
public class CustomDisplay : IDisposableConstructors  CustomDisplay(bool enable) Constructs a new CustomDisplay instance. You must call Dispose() when you are done with this instance, otherwise the display methods will never be switched off.  Properties  BoundingBox ClippingBox Gets the clipping box of this CustomDisplay. bool Enabled Gets or sets the Enabled state of this CustomDisplay instance.</description>
    </item>
    
    <item>
      <title>DisplayBitmap</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaybitmap/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaybitmap/</guid>
      <description>Namespace: Rhino.Display
A bitmap resource that can be used by the display pipeline (currently only in OpenGL display). Reuse DisplayBitmaps for drawing if possible; it is much more expensive to construct new DisplayBitmaps than it is to reuse existing DisplayBitmaps.
public class DisplayBitmap : IDisposableConstructors  DisplayBitmap(Bitmap bitmap) Constructs a DisplayBitmap from an existing bitmap.  Methods  static DisplayBitmap Load(string path) Load a DisplayBitmap from and image file on disk.</description>
    </item>
    
    <item>
      <title>DisplayBitmapDrawList</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaybitmapdrawlist/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaybitmapdrawlist/</guid>
      <description>Namespace: Rhino.Display
public class DisplayBitmapDrawListConstructors  DisplayBitmapDrawList()   Properties  BoundingBox BoundingBox  int MaximumCachedSortLists Maximum number of cached sort order index lists stored on this class. Default is 10, but depending on the number of points in this list you may get better performance by setting this value to a certain percentage of the point count. double SortAngleTolerance Angle in radians used to determine if an index list is &amp;ldquo;parallel enough&amp;rdquo; to a viewports camera angle.</description>
    </item>
    
    <item>
      <title>DisplayConduit</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displayconduit/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displayconduit/</guid>
      <description>Namespace: Rhino.Display
public class DisplayConduitProperties  bool Enabled  ActiveSpace SpaceFilter If you want this conduit to only work in a specific space (model or page), then set this filter to that specific space. The default is None meaning no filter is applied since 6.0  </description>
    </item>
    
    <item>
      <title>DisplayEngine</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displayengine/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displayengine/</guid>
      <description>Namespace: Rhino.Display
public class DisplayEngine : IDisposableMethods  void Dispose() Actively reclaims unmanaged resources that this instance uses. since 6.0  </description>
    </item>
    
    <item>
      <title>DisplayMaterial</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaymaterial/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaymaterial/</guid>
      <description>Namespace: Rhino.Display
public class DisplayMaterial : IDisposableConstructors  DisplayMaterial() Constructs a default material. DisplayMaterial(Color diffuse) Constructs a default material with a specific diffuse color. DisplayMaterial(Color diffuse,Color specular,Color ambient,Color emission,double shine,double transparency) Constructs a material with custom properties. DisplayMaterial(Color diffuse,double transparency) Constructs a default material with a specific diffuse color and transparency. DisplayMaterial(DisplayMaterial other) Duplicate another material. DisplayMaterial(Material material)   Properties  Color Ambient Gets or sets the Ambient color of the Material.</description>
    </item>
    
    <item>
      <title>DisplayModeChangedEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaymodechangedeventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaymodechangedeventargs/</guid>
      <description>Namespace: Rhino.Display
public class DisplayModeChangedEventArgs : EventArgsProperties  Guid ChangedDisplayModeId  since 6.18 Guid OldDisplayModeId  since 6.18 RhinoDoc RhinoDoc  since 6.18 RhinoViewport Viewport  since 6.18  </description>
    </item>
    
    <item>
      <title>DisplayModeDescription</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaymodedescription/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaymodedescription/</guid>
      <description>Namespace: Rhino.Display
Description of a how Rhino will display in a viewport. These are the modes that are listed under &amp;ldquo;Advanced display&amp;rdquo; in the options dialog.
[Serializable]public class DisplayModeDescription : IDisposable, ISerializableProperties  static Guid AmbientOcclusionId  since 6.0 static Guid GhostedId  since 6.0 static Guid PenId  since 6.0 static Guid RaytracedId  since 6.0 static Guid RenderedId  since 6.0 static Guid RenderedShadowsId  since 6.</description>
    </item>
    
    <item>
      <title>DisplayPipeline</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaypipeline/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaypipeline/</guid>
      <description>Namespace: Rhino.Display
The display pipeline calls events during specific phases of drawing During the drawing of a single frame the events are called in the following order.
[Begin Drawing of a Frame] CalculateBoundingBoxCalculateClippingPanesSetupFrustumSetupLightingInitializeFrameBufferDrawBackgroundIf this is a layout and detail objects exist the channels are called in the same order for each detail object (drawn as a nested viewport)PreDrawObjectsFor Each Visible Non Highlighted ObjectSetupObjectDisplayAttributesPreDrawObjectDrawObjectPostDrawObjectPostDrawObjects - depth writing/testing onDrawForeGround - depth writing/testing offFor Each Visible Highlighted ObjectSetupObjectDisplayAttributesPreDrawObjectDrawObjectPostDrawObjectPostProcessFrameBuffer (If a delegate exists that requires this)DrawOverlay (if Rhino is in a feedback mode) [End of Drawing of a Frame]</description>
    </item>
    
    <item>
      <title>DisplayPipelineAttributes</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/displaypipelineattributes/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/displaypipelineattributes/</guid>
      <description>Namespace: Rhino.Display
Represents display pipeline settings, such as &amp;ldquo;show transparency&amp;rdquo; and &amp;ldquo;show grips&amp;rdquo;.
[Serializable]public class DisplayPipelineAttributes : IDisposable, ISerializableProperties  Color AmbientLightingColor  since 6.3 BoundingBoxDisplayMode BoundingBoxMode  since 6.1 bool CastShadows Cast shadows. since 6.4 ContextsForDraw ContextForDraw  since 6.5 Color CurveColor Color used for drawing curves since 5.1 int CurveThickness Pixel thickness for curves since 5.1 bool DisableConduits  bool DisableTransparency  string EnglishName  FrameBufferFillMode FillMode Get or set the frame buffer fill mode.</description>
    </item>
    
    <item>
      <title>DrawEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/draweventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/draweventargs/</guid>
      <description>Namespace: Rhino.Display
public class DrawEventArgs : EventArgsProperties  DisplayPipeline Display  RhinoDoc RhinoDoc  RhinoViewport Viewport   </description>
    </item>
    
    <item>
      <title>DrawForegroundEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/drawforegroundeventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/drawforegroundeventargs/</guid>
      <description>Namespace: Rhino.Display
public class DrawForegroundEventArgs : DrawEventArgsProperties  bool DrawWorldAxes  bool WorldAxesDrawn   </description>
    </item>
    
    <item>
      <title>DrawObjectEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/drawobjecteventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/drawobjecteventargs/</guid>
      <description>Namespace: Rhino.Display
public class DrawObjectEventArgs : DrawEventArgsProperties  bool DrawObject  RhinoObject RhinoObject   </description>
    </item>
    
    <item>
      <title>InitFrameBufferEventArgs</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/initframebuffereventargs/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/initframebuffereventargs/</guid>
      <description>Namespace: Rhino.Display
public class InitFrameBufferEventArgs : EventArgsMethods  void SetFill(Color color)  since 6.18 void SetFill(Color top,Color bottom)  since 6.18 void SetFill(Color topLeft,Color bottomLeft,Color topRight,Color bottomRight)  since 6.18  </description>
    </item>
    
    <item>
      <title>MeshDisplayAttributes</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/meshdisplayattributes/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/meshdisplayattributes/</guid>
      <description>Namespace: Rhino.Display
public class MeshDisplayAttributesProperties  Color AllMeshWiresColor Color.Empty means that we are NOT using a single color for all mesh wires. bool HighlightMeshes  int MeshWireThickness  bool ShowMeshVertices  bool ShowMeshWires   </description>
    </item>
    
    <item>
      <title>RhinoPageView</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/rhinopageview/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/rhinopageview/</guid>
      <description>Namespace: Rhino.Display
A window that contains a single layout &amp;lsquo;page&amp;rsquo;
public class RhinoPageView : RhinoViewEvents  static PageViewSpaceChange   Properties  RhinoViewport ActiveViewport The ActiveViewport is the same as the MainViewport for standard RhinoViews. In a RhinoPageView, the active viewport may be the RhinoViewport of a child detail object. Most of the time, you will use ActiveViewport unless you explicitly need to work with the main viewport. double PageHeight Height of the page in the document&amp;rsquo;s PageUnitSystem since 5.</description>
    </item>
    
    <item>
      <title>ViewDisplayAttributes</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/viewdisplayattributes/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/viewdisplayattributes/</guid>
      <description>Namespace: Rhino.Display
public class ViewDisplayAttributesProperties  bool BlendGrid  bool DrawGrid  bool DrawGridAxes  bool DrawTransparentGridPlane  bool DrawWorldAxes  bool DrawZAxis  double HorizontalViewportScale  bool ShowGridOnTop  bool UseDocumentGrid  double VerticalViewportScale  Color WorldAxisColorX  Color WorldAxisColorY  Color WorldAxisColorZ   </description>
    </item>
    
    <item>
      <title>ZBufferCapture</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/zbuffercapture/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:17 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/zbuffercapture/</guid>
      <description>Namespace: Rhino.Display
Provides functionality for getting the zbuffer values from a viewport and a given display mode
public class ZBufferCapture : IDisposableConstructors  ZBufferCapture(RhinoViewport viewport)  since 5.3  Methods  void Dispose() Actively reclaims unmanaged resources that this instance uses. since 5.3 System.Drawing.Bitmap GrayscaleDib()  since 5.3 int HitCount()  since 5.3 float MaxZ()  since 5.3 float MinZ()  since 5.3 void SetDisplayMode(Guid modeId)  since 5.3 void ShowAnnotations(bool on)  since 5.</description>
    </item>
    
    <item>
      <title>Color4f</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/color4f/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:16 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/color4f/</guid>
      <description>Namespace: Rhino.Display
Color defined by 4 floating point values.
 static !=  static ==   Constructors  Color4f(Color color)  Color4f(Color4f color)  Color4f(float red,float green,float blue,float alpha)  Color4f(int argb)  since 7.0  Properties  static Color4f Black  static Color4f Empty  static Color4f White  float A  float B  float G  float L  since 6.3 float R   Methods  static Color4f ApplyGamma(Color4f col,float gamma)  since 6.</description>
    </item>
    
    <item>
      <title>Text3d</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/text3d/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:16 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/text3d/</guid>
      <description>Namespace: Rhino.Display
3D aligned text with font settings.
public class Text3d : IDisposableConstructors  Text3d(string text) Constructs a new instance of Text3d. Text3d(string text,Plane plane,double height) Constructs a new instance of Text3d.  Properties  bool Bold Gets or sets whether this Text3d object will be drawn in Bold. BoundingBox BoundingBox Gets the boundingbox for this Text3d object. string FontFace Gets or sets the FontFace name. double Height Gets or sets the height (in units) of this Text3d object.</description>
    </item>
    
    <item>
      <title>VisualAnalysisMode</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/visualanalysismode/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:16 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/visualanalysismode/</guid>
      <description>Namespace: Rhino.Display
Represents a base class for visual analysis modes. This class is abstract.
public class VisualAnalysisModeProperties  static Guid RhinoCurvatureColorAnalyisModeId Id for Rhino&amp;rsquo;s built-in curvature color analysis mode. Surface curvature is shown using False color mapping. static Guid RhinoCurvatureGraphAnalysisModeId Id for Rhino&amp;rsquo;s built-in curvature graphs analysis mode. Curvature hair is shown on curves and surfaces. static Guid RhinoDraftAngleAnalysisModeId Id for Rhino&amp;rsquo;s built-in draft angle analysis mode. Draft angle is displayed using False colors.</description>
    </item>
    
    <item>
      <title>ColorGradient</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorgradient/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:15 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorgradient/</guid>
      <description>Namespace: Rhino.Display
public class ColorGradientProperties  Point3d EndPoint End point of gradient since 7.0 GradientType GradientType Gradient fill type associated with this hatch since 7.0 double Repeat Repeat factor for gradient. Factors greater than 1 define a reflected repeat factor while values less than -1 define a wrapped repeat factor. since 7.0 Point3d StartPoint Start point of gradient since 7.0  Methods  ColorStop[] GetColorStops() Get sorted list of colors / positions that a gradient is defined over since 7.</description>
    </item>
    
    <item>
      <title>ColorStop</title>
      <link>/apidocs/hugo/rhinocommon/rhino/display/colorstop/</link>
      <pubDate>Wed, 11 Mar 2020 15:34:15 +0000</pubDate>
      
      <guid>/apidocs/hugo/rhinocommon/rhino/display/colorstop/</guid>
      <description>Namespace: Rhino.Display
Combination of a color and position. Used in defining gradient fills
Constructors  ColorStop(Color color,double t) Create color stop from a color and position since 7.0  Properties  Color Color  since 7.0 double Position Parameter that Color is defined at since 7.0  </description>
    </item>
    
  </channel>
</rss>