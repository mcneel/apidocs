<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rhino.Runtime.InteropWrappers on Test API Site</title>
    <link>http://example.org/posts/rhino/runtime/interopwrappers/</link>
    <description>Recent content in Rhino.Runtime.InteropWrappers on Test API Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/posts/rhino/runtime/interopwrappers/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ClassArrayObjRef</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/classarrayobjref/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/classarrayobjref/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Represents a wrapper to an unmanaged &amp;ldquo;array&amp;rdquo; (list) of CRhinoObjRef instances. Wrapper for a C++ ON_ClassArray of CRhinoObjRef
public class ClassArrayObjRefConstructors ClassArrayObjRef()  (summary) Initializes a new instance. (since) 5.0  ClassArrayObjRef(IEnumerableobjrefs)  (summary) Initializes a new instances from a set of ObjRefs (since) 5.0  Properties int Count  (summary) Gets the number of CRhinoObjRef instances in this array. (since) 5.0  Methods void Add(ObjRef objref)  (summary) Adds an ObjRef to the list.</description>
    </item>
    
    <item>
      <title>ClassArrayOnObjRef</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/classarrayonobjref/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/classarrayonobjref/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Represents a wrapper to an unmanaged &amp;ldquo;array&amp;rdquo; (list) of ON_ObjRef instances. Wrapper for a C++ ON_ClassArray of ON_ObjRef
public class ClassArrayOnObjRefConstructors ClassArrayOnObjRef()  (summary) Initializes a new instance. (since) 5.8  ClassArrayOnObjRef(IEnumerableobjrefs)  (summary) Initializes a new instances from a set of ObjRefs (since) 5.8  Properties int Count  (summary) Gets the number of ObjRef instances in this array. (since) 5.8  Methods void Add(ObjRef objref)  (summary) Adds an ObjRef to the list.</description>
    </item>
    
    <item>
      <title>ClassArrayString</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/classarraystring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/classarraystring/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_ClassArray&amp;lt;ON_wString&amp;gt; If you are not writing C++ code then this class is not for you.
public class ClassArrayStringConstructors ClassArrayString()  (summary) Initializes a new instance. (since) 6.0  Properties int Count  (summary) Gets the number of strings in this array. (since) 6.0  Methods void Add(string s)  (summary) Adds a string to the list. (since) 6.0 (returns) void This is some return comment  IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>CurveSegment</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/curvesegment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/curvesegment/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
For internal use only.
Properties int Index  (summary) The index of the curve used by this boundary element. (since) 7.0  bool Reversed  (summary) True if this piece of the curve should be reversed. (since) 7.0  Interval SubDomain  (summary) The subdomain of the curve used by this boundary element. (since) 7.0  </description>
    </item>
    
    <item>
      <title>SimpleArray2dex</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearray2dex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearray2dex/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_2dex&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArray2dexConstructors SimpleArray2dex()  (summary) Initializes a new class. (since) 6.0  SimpleArray2dex(IEnumerablevalues)  (summary) Initializes a new class (since) 6.0  Properties int Count  (summary) Gets the amount of elements in this array. (since) 6.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayArrayPoint3d</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayarraypoint3d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayarraypoint3d/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_PolyLine&amp;gt;, ON_SimpleArray&amp;lt;ON_3dPointArray&amp;gt; If you are not writing C++ code then this class is not for you.
public class SimpleArrayArrayPoint3dConstructors SimpleArrayArrayPoint3d()  (summary) Initializes a new empty instance. (since) 7.0  Properties int Count  (summary) Gets the amount of polylines in this array. (since) 7.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 7.0 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayBinaryArchiveReader</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraybinaryarchivereader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraybinaryarchivereader/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_BinaryArchive&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArrayBinaryArchiveReaderConstructors SimpleArrayBinaryArchiveReader()  (summary) Initializes a new class. (since) 6.0  SimpleArrayBinaryArchiveReader(IntPtr p)  (summary) Initializes a new class. (since) 6.0  Properties int Count  (summary) Gets the amount of elements in this array. (since) 6.0  Methods void Add(BinaryArchiveReader reader)  (summary) Adds a new at the end of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayBrepPointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraybreppointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraybreppointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_SimpleArray&amp;lt;ON_Brep&amp;gt; or ON_SimpleArray&amp;lt;const ON_Brep&amp;gt; If you are not writing C++ code then this class is not for you.
public class SimpleArrayBrepPointerConstructors SimpleArrayBrepPointer()  (summary) Initializes a new instance. (since) 5.0  Properties int Count  (summary) Gets the amount of breps in this array. (since) 5.0  Methods void Add(Brep brep,bool asConst)  (summary) Adds a brep to the list. (since) 5.0 (returns) void This is some return comment  IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayClippingPlaneObjectPointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayclippingplaneobjectpointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayclippingplaneobjectpointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
ON_SimpleArray of CRhinoClippingPlaneObject*
public class SimpleArrayClippingPlaneObjectPointerConstructors SimpleArrayClippingPlaneObjectPointer()  (summary) Initializes a new instance. (since) 6.7  Properties int Count  (summary) Gets the amount of clipping planes in this array. (since) 6.7  Methods void Add(ClippingPlaneObject clippingplane,bool asConst)  (summary) Adds a clipping plane to the list. (since) 6.7 (returns) void This is some return comment  IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayCurvePointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraycurvepointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraycurvepointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_SimpleArray of ON_Curve* or const ON_Curve*. If you are not writing C++ code, then you can ignore this class.
public class SimpleArrayCurvePointerConstructors SimpleArrayCurvePointer()  (summary) Initializes a new instance. (since) 5.0  SimpleArrayCurvePointer(IEnumerablecurves)  (summary) Initializes a new instance, from a set of input curves. (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 5.0 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayDouble</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraydouble/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraydouble/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray. If you are not writing C++ code, then this class is not for you.
public class SimpleArrayDoubleConstructors SimpleArrayDouble()  (summary) Initializes a new instance. (since) 5.0  SimpleArrayDouble(IEnumerableitems)  (summary) Initializes a new instance, with items. (since) 5.0  Properties int Count  (summary) Gets the amount of elements in this array. (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayExtrusionPointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayextrusionpointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayextrusionpointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_SimpleArray&amp;lt;ON_Extrusion&amp;gt; or ON_SimpleArray&amp;lt;const ON_Extrusion&amp;gt; If you are not writing C++ code then this class is not for you.
public class SimpleArrayExtrusionPointerConstructors SimpleArrayExtrusionPointer()  (summary) Initializes a new instance. (since) 6.0  Properties int Count  (summary) Gets the amount of Extrusions in this array. (since) 6.0  Methods void Add(Extrusion extrusion,bool asConst)  (summary) Adds a extrusion to the list. (since) 6.0 (returns) void This is some return comment  IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayGeometryPointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraygeometrypointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraygeometrypointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_SimpleArray&amp;lt;ON_Geometry&amp;gt; or ON_SimpleArray&amp;lt;const ON_Geometry*&amp;gt;. If you are not writing C++ code, then this class is not for you.
public class SimpleArrayGeometryPointerConstructors SimpleArrayGeometryPointer()  (summary) Initializes a new instance. (since) 5.0  SimpleArrayGeometryPointer(IEnumerable geometry)  (summary) Expects all of the items in the IEnumerable to be GeometryBase types (since) 5.0  SimpleArrayGeometryPointer(IEnumerablegeometry)  (summary) Create an ON_SimpleArray&amp;lt;ON_Geometry*&amp;gt; filled with items in geometry (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayGuid</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayguid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayguid/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_UUID&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArrayGuidConstructors SimpleArrayGuid()  (summary) Initializes a new class. (since) 5.0  Properties int Count  (summary) Gets the amount of elements in this array. (since) 5.0  Methods void Append(Guid uuid)  (summary) Appends a new at the end of this array. (since) 6.0 (returns) void This is some return comment  IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayGuidPointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayguidpointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayguidpointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_UUID&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArrayGuidPointerConstructors SimpleArrayGuidPointer()  (summary) Initializes a new class. (since) 6.0  Properties int Count  (summary) Gets the amount of elements in this array. (since) 6.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 6.0 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayInt</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayint/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray. If you are not writing C++ code then this class is not for you.
public class SimpleArrayIntConstructors SimpleArrayInt()  (summary) Initializes a new class. (since) 5.0  SimpleArrayInt(IEnumerablevalues)  (summary) Initializes a new class (since) 5.9  Properties int Count  (summary) Gets the amount of elements in this array. (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayInterval</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayinterval/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayinterval/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_Interval&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArrayIntervalConstructors SimpleArrayInterval()  (summary) Initializes a new class. (since) 5.0  Properties int Count  (summary) Gets the amount of elements in this array. (since) 5.0  Methods void Add(Interval interval)  (summary) Adds a new at the end of this array. (since) 6.0 (returns) void This is some return comment  IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArrayLine</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayline/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_Line&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArrayLineConstructors SimpleArrayLine()  (summary) Initializes a new instance. (since) 5.0  Properties int Count  (summary) Gets the amount of lines in this array. (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 5.0 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayLinetypePointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraylinetypepointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraylinetypepointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_SimpleArray&amp;lt;ON_Linetype*&amp;gt; If you are not writing C++ code then this class is not for you.
public class SimpleArrayLinetypePointerConstructors SimpleArrayLinetypePointer()  (summary) Initializes a new instance. (since) 6.6  Properties int Count  (summary) Gets the amount of linetypes in this array. (since) 6.6  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 6.6 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayMeshPointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraymeshpointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraymeshpointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Represents a wrapper to an unmanaged array of mesh pointers. Wrapper for a C++ ON_SimpleArray of ON_Mesh* or const ON_Mesh*. If you are not writing C++ code then this class is not for you.
public class SimpleArrayMeshPointerConstructors SimpleArrayMeshPointer()  (summary) Initializes a new instance. (since) 5.0  Properties int Count  (summary) Gets the amount of meshes in this array. (since) 5.0  Methods void Add(Mesh mesh,bool asConst)  (summary) Adds a mesh to the list.</description>
    </item>
    
    <item>
      <title>SimpleArrayPlane</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayplane/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayplane/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray&amp;lt;ON_Plane&amp;gt;. If you are not writing C++ code then this class is not for you.
public class SimpleArrayPlaneConstructors SimpleArrayPlane()  (summary) Initializes a new instance. (since) 6.0  Properties int Count  (summary) Gets the amount of lines in this array. (since) 6.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 6.0 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayPoint2d</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraypoint2d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraypoint2d/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
ON_SimpleArray&amp;lt;ON_2dPoint&amp;gt; class wrapper. If you are not writing C++ code then this class is not for you.
public class SimpleArrayPoint2dConstructors SimpleArrayPoint2d()  (summary) Initializes a new empty instance. (since) 5.6  Properties int Count  (summary) Gets the amount of points in this array. (since) 5.6  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 5.6 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayPoint3d</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraypoint3d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraypoint3d/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
ON_SimpleArray&amp;lt;ON_3dPoint&amp;gt;, ON_3dPointArray, ON_PolyLine all have the same size This class wraps all of these C++ versions. If you are not writing C++ code then this class is not for you.
public class SimpleArrayPoint3dConstructors SimpleArrayPoint3d()  (summary) Initializes a new empty instance. (since) 5.0  Properties int Count  (summary) Gets the amount of points in this array. (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array.</description>
    </item>
    
    <item>
      <title>SimpleArraySurfacePointer</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearraysurfacepointer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearraysurfacepointer/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for a C++ ON_SimpleArray of ON_Surface* or const ON_Surface*. If you are not writing C++ code then this class is not for you.
public class SimpleArraySurfacePointerConstructors SimpleArraySurfacePointer()  (summary) Initializes a new instance. (since) 5.0  Methods IntPtr ConstPointer()  (summary) Gets the const (immutable) pointer of this array. (since) 5.0 (returns) IntPtr This is some return comment  void Dispose()  (summary) Actively reclaims unmanaged resources that this instance uses.</description>
    </item>
    
    <item>
      <title>SimpleArrayUint</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayuint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/simplearrayuint/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Wrapper for ON_SimpleArray. If you are not writing C++ code then this class is not for you.
public class SimpleArrayUintConstructors SimpleArrayUint()  (summary) Initializes a new class. (since) 6.0  SimpleArrayUint(IEnumerablevalues)  (summary) Initializes a new class. (since) 6.0  Properties int Count  (summary) Gets the number of elements in this array. (since) 6.0  uint UnsignedCount  (summary) Gets the number of elements in this array.</description>
    </item>
    
    <item>
      <title>StringHolder</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/stringholder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/stringholder/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
This class is used to pass strings back and forth between managed and unmanaged code. This should not be be needed by plug-ins. If you are just dealing with an ON_wString*, use
public class StringHolderConstructors StringHolder()  (summary) Constructor (since) 5.8  Methods static string GetString(IntPtr pStringHolder)  (summary) Gets managed string from unmanaged ON_wString pointer. (since) 5.8 (returns) string This is some return comment  IntPtr ConstPointer()  (summary) C++ pointer used to access the ON_wString, managed plug-ins should never need this.</description>
    </item>
    
    <item>
      <title>StringWrapper</title>
      <link>http://example.org/posts/rhino/runtime/interopwrappers/stringwrapper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/rhino/runtime/interopwrappers/stringwrapper/</guid>
      <description>Namespace: Rhino.Runtime.InteropWrappers
Represents a wrapper to an unmanaged OpenNurbs string. Wraps a C++ ON_wString*.
public class StringWrapperConstructors StringWrapper()  (summary) Initializes a new empty unmanaged string (ON_wString*). (since) 5.0  StringWrapper(string s)  (summary) Initializes a new unmanaged string with an initial value. The string s can be null. (since) 5.0  Properties IntPtr ConstPointer  (summary) Gets the const pointer (const ON_wString*). (since) 5.0  IntPtr NonConstPointer  (summary) Gets the non-const pointer (ON_wString*).</description>
    </item>
    
  </channel>
</rss>